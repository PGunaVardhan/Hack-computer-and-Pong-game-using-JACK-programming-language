class Ball{
    field int x, y, radius, ballDesign;
    constructor Ball new(int _x,int _y, int r, int design){
        let x = _x;
        let y = _y;
        let radius = r;
        let ballDesign = design;
        return this;
    }
    method int getX(){return x;}
    method int getY(){return y;}
    method int getR(){return radius;}
    method void move(int dx, int dy){ // to present
        do hide();
        let x = x + dx;
        let y = y + dy;
        do draw();
        return;
    }
    method void hide(){
        do Screen.setColor(false);
        do Screen.drawCircle(x, y, radius);
        return;
    }
    method void draw(){ // to present
        if (ballDesign = 1){ // Standard design
            do Screen.setColor(true);
            do Screen.drawCircle(x, y, radius);
        }else{
            if(ballDesign = 2){ // Concentric circles
                do Screen.setColor(true);
                do Screen.drawCircle(x, y, radius);
                do Screen.setColor(false);
                do Screen.drawCircle(x, y, radius - 3);
                do Screen.setColor(true);
                do Screen.drawCircle(x, y, radius - (radius - 1));
            }else{
                if(ballDesign = 3){ // Rectangle in circle
                    do Screen.setColor(true);
                    do Screen.drawCircle(x, y, radius);
                    do Screen.setColor(false);
                    do Screen.drawRectangle(x - (radius/3+2), y - (radius/3+2),x + (radius/3+2),y + (radius/3+2));
                }else{
                    do Screen.setColor(true);
                    do Screen.drawCircle(x, y, radius);
                }
            }
        }
        
        return;
    }
    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }
}