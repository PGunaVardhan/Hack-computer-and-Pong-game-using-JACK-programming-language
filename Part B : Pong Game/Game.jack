class Game{
    field int playerDx, compDx, ballDx, ballDy, pause, score, gameMode, ballDesign, playerDesign;
    field Player me, comp;
    field Ball ball;
    field boolean gameOver;
    constructor Game new(){
        let ballDx = 3;
        let ballDy = -4;
        let compDx = 3;
        let playerDx = 3;
        let score = 0; 
        return this;
    }
    method void printScore(){
        do Output.moveCursor(22,7);
	    do Output.printInt(score);
        return;
    }
    method void wallCollision(Ball ball){ // to present
        if((ball.getX()+ball.getR()) > (511 - ball.getR() - Math.abs(ballDx))){
            let ballDx = -ballDx;
            do ball.move(ballDx ,ballDy);
        }else{}
        if((ball.getX()-ball.getR()) < (0 + ball.getR() + Math.abs(ballDx))){
            let ballDx = -ballDx;
            do ball.move(ballDx, ballDy);
        }else{}
        return;
    }
    method void playerCollision(Ball ball, Player player, Player computer){ // to present
        if((ball.getX() > computer.getX()) & (ball.getX() < (computer.getX() + computer.getLength()))){
            if((ball.getY() - ball.getR() - Math.abs(ballDy) - 1) < (computer.getY() + computer.getHeight())){
                let ballDy = -ballDy;
                do ball.move(ballDx,ballDy);
            }else{}
        }else{}
        if((ball.getX() > player.getX()) & (ball.getX() < (player.getX() + player.getLength()))){
            if((ball.getY() + ball.getR() + Math.abs(ballDy) + 1) > player.getY()){
                let ballDy = -ballDy;
                let score = score + 1;
                do ball.move(ballDx, ballDy);
            }else{}
        }else{}
        return;
    }
    method boolean over(Ball ball){
        if(((ball.getY() + ball.getR()) > 235) | ((ball.getY() - ball.getR()) < 15)){
            return true;
        }else{return false;}
    }
    method void printGameModes(){
        do Output.moveCursor(2,16);
	    do Output.printString("Select game mode, (press # and ENTER)");
        do Output.moveCursor(6,11);
	    do Output.printString("1");
        do Output.moveCursor(8,10);
	    do Output.printString("EASY");
        do Output.moveCursor(6,30);
	    do Output.printString("2");
        do Output.moveCursor(8,29);
	    do Output.printString("HARD");
        do Output.moveCursor(6,49);
	    do Output.printString("3");
        do Output.moveCursor(8,46);
	    do Output.printString("INSANE");
        return;
    }
    method void printBallDesigns(){
        do Output.moveCursor(2,16);
	    do Output.printString("Select ball design, (press # and ENTER)");
        do Output.moveCursor(6,11);
	    do Output.printString("1");
        do Screen.setColor(true);
        do Screen.drawCircle(90,100,10);

        do Output.moveCursor(6,30);

	    do Output.printString(" 2");
        do Screen.setColor(true);
        do Screen.drawCircle(250, 100, 10);
        do Screen.setColor(false);
        do Screen.drawCircle(250, 100, 5);
        do Screen.setColor(true);
        do Screen.drawCircle(250, 100, 1);

        do Output.moveCursor(6,49);

	    do Output.printString(" 3");
        do Screen.setColor(true);
        do Screen.drawCircle(400, 100, 10);
        do Screen.setColor(false);
        do Screen.drawRectangle(400-4, 100-4,400+4,100+4);
        return;
    }
    method void printPlayerDesigns(){
        do Output.moveCursor(2,16);
	    do Output.printString("Select player design, (press # and ENTER)");
        do Output.moveCursor(6,11);
	    do Output.printString("1");
        do Screen.setColor(true);
        do Screen.drawRectangle(50, 100, 130, 100 + 8);

        do Output.moveCursor(6,30);
	    do Output.printString("2");
        do Screen.setColor(true);
        do Screen.drawRectangle(210, 100, 290, 100 + 1);
        do Screen.drawRectangle(210, 100 + 7, 290, 100 + 8);
        do Screen.drawLine(210, 100+4,290,100+4);

        do Output.moveCursor(6,49);
	    do Output.printString("3");
        do Screen.drawRectangle(360, 100, 370, 100+8);
        do Screen.drawRectangle(430, 100, 440, 100+8);
        do Screen.drawRectangle(360, 100, 440, 100+2);
        return;
    }
    method void start(){ // to present
        var int keyPressed, _keyPressed;
        var boolean pressed;
        let pressed = false;
        let keyPressed = 0;
        do printGameModes();
        
        while(~pressed){
            do Output.moveCursor(13,21);
            let _keyPressed = Keyboard.readInt("Enter game mode: ");
            if(~(_keyPressed = 0)){
                let keyPressed = _keyPressed; 
                let pressed = true;
            }
        }
        do Screen.clearScreen();    
        let gameMode = keyPressed;
        if(~(gameMode = 3)){
            let pressed = false;
        }
        do printBallDesigns();
        
        while(~pressed){
            do Output.moveCursor(13,21);
            let _keyPressed = Keyboard.readInt("Enter ball design: ");
            if(~(_keyPressed = 0)){
                let keyPressed = _keyPressed; 
                let pressed = true;
            }
        }
        do Screen.clearScreen();    
        let ballDesign = keyPressed;
        do printPlayerDesigns();
        let pressed = false;
        
        while(~pressed){
            do Output.moveCursor(13,21);
            let _keyPressed = Keyboard.readInt("Enter player design: ");
            if(~(_keyPressed = 0)){
                let keyPressed = _keyPressed; 
                let pressed = true;
            }
        }
        do Screen.clearScreen();    
        let playerDesign = keyPressed;
        return;
    }
    method void setMode(){
        if(gameMode = 1){
            let me = Player.new(220,220, 50, playerDesign);
            let comp = Player.new(0,10, 511, 1);
            let ball = Ball.new(150,150, 8, ballDesign);
            let pause = 50;
        }else{
            if(gameMode = 2){
                let me = Player.new(220,220, 40, playerDesign);
                let comp = Player.new(0,10, 511, 1);
                let ball = Ball.new(150,150, 5, ballDesign);
                let pause = 20;
            }else{
                if(gameMode = 3){
                    let me = Player.new(220,220, 25, playerDesign);
                    let comp = Player.new(0,10, 511, 1);
                    let ball = Ball.new(150,150, 3, 1);
                    let pause = 15;
                }else{
                    let me = Player.new(220,220, 50, playerDesign);
                    let comp = Player.new(0,10, 511, 1);
                    let ball = Ball.new(150,150, 8, ballDesign);
                    let pause = 50;
                }
            }
        }
        return;
    }
    method void play(){ // to present
        var char keyPressed, _keyPressed;
        let keyPressed = 0;
        do ball.draw();
        do comp.draw();
        do me.draw();
        do Output.moveCursor(22,0);
	    do Output.printString("SCORE: ");
        while(~gameOver){
            do playerCollision(ball, me, comp);
            do wallCollision(ball);
            do printScore();
            do ball.move(ballDx, ballDy);
            let _keyPressed = Keyboard.keyPressed();
            if(~(_keyPressed = 0)){
                let keyPressed = _keyPressed; 
            }
            if(keyPressed = 130){ 
                do me.move(-playerDx);
            }else{}
            if(keyPressed = 132){   
                do me.move(playerDx);
            }else{} 
            if(over(ball)){
                do Output.moveCursor(11,25);
	            do Output.printString("Game Over!");
                do Sys.wait(3000 - pause);
                let gameOver = true;
            }
            do Sys.wait(pause);
        }
        do me.dispose();
        do comp.dispose();
        do ball.dispose();
        return;
    }
    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }
}